name: Publish

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.x'

      - name: Restore
        run: dotnet restore Base64Extensions/Base64Extensions.csproj

      - name: Build Base64Extensions
        run: dotnet build -c Release --no-restore Base64Extensions/Base64Extensions.csproj

      - name: Pack Base64Extensions
        run: dotnet pack -c Release --no-restore --no-build -o packages Base64Extensions/Base64Extensions.csproj

      - name: Upload Artifacts
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: nuget
          path: packages/*.nupkg

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
    
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'

      - name: Restore
        run: dotnet restore Base64Extensions.Tests/Base64Extensions.Tests.csproj

      - name: Unit Test
        run: dotnet test --no-restore -c Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura Base64Extensions.Tests/Base64Extensions.Tests.csproj

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: Base64Extensions.Tests/coverage.cobertura.xml

  publish:
    name: Publish
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: nuget
          path: packages/

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0'

      - name: Publish Base64Extensions
        run: dotnet nuget push packages/Base64Extensions.*.*.*.nupkg --api-key ${{secrets.NUGET_API_KEY}} --source https://www.nuget.org/api/v2/package
